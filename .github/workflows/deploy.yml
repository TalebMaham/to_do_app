name: Deploy to VPS

on:
  push:
    branches:
      - main  # Déclenche l'action lors d'un push sur la branche main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Cloner le repository
      uses: actions/checkout@v3

    # 🔹 Configuration de Java pour exécuter les tests du backend
    - name: ☕️ Installer Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # 🔹 Exécuter les tests du backend (Spring Boot)
    - name: 🧪 Lancer les tests du backend
      run: |
        cd demo
        ./mvnw test
      continue-on-error: false  # 🚨 Stoppe le workflow si les tests échouent

    # 🔹 Installation de Node.js pour exécuter les tests du frontend
    - name: ⚡ Installer Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # 🔹 Installation des dépendances et tests du frontend
    - name: 🧪 Lancer les tests du frontend
      run: |
        cd front
        npm install
        npm test -- --watch=false --browsers=ChromeHeadless
      continue-on-error: false  # 🚨 Stoppe le workflow si les tests échouent

    # 🔹 Connexion à Docker Hub
    - name: 🔑 Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    # 🔹 Construire et pousser l'image Spring Boot
    - name: 🏗️ Construire et pousser l'image Spring Boot
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:latest ./demo
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:latest

    # 🔹 Construire et pousser l'image Angular
    - name: 🏗️ Construire et pousser l'image Angular
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/angular-app:latest ./front
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/angular-app:latest

    # 🔹 Déploiement sur le VPS via SSH
    - name: 🚀 Déploiement sur le VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "🔧 Vérification de Docker et Docker Compose..."
          if ! command -v docker &> /dev/null; then
            echo "🚀 Installation de Docker..."
            sudo apt update && sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          fi
          
          if ! command -v docker-compose &> /dev/null; then
            echo "🚀 Installation de Docker Compose..."
            sudo apt install -y docker-compose
          fi

          echo "📥 Récupération des nouvelles images..."
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/angular-app:latest

          echo "🧹 Suppression des anciens conteneurs..."
          docker stop spring-app angular-app || true
          docker rm spring-app angular-app || true

          echo "🚀 Lancement des nouveaux conteneurs..."
          docker run -d --name spring-app -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:latest
          docker run -d --name angular-app -p 4200:4200 ${{ secrets.DOCKER_HUB_USERNAME }}/angular-app:latest

          echo "✅ Déploiement terminé avec succès !"
