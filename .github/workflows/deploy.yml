name: Deploy to VPS

on:
  push:
    branches:
      - main  # Déclenche l'action lors d'un push sur la branche main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Cloner le repository (localement sur GitHub Actions)
      uses: actions/checkout@v3

    # 🔹 Connexion à Docker Hub
    - name: 🔑 Connexion à Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    # 🔹 Construire et pousser l'image Spring Boot
    - name: 🏗️ Construire et pousser l'image Spring Boot
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:latest ./demo
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:latest

    # 🔹 Construire et pousser l'image Angular
    - name: 🏗️ Construire et pousser l'image Angular
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/angular-app:latest ./front
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/angular-app:latest

    # 🔹 Déploiement sur le VPS via SSH
    - name: 🚀 Déploiement sur le VPS (Sans code source)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "🚀 Déploiement en cours sur le VPS..."

          echo "🔄 Arrêt et suppression des anciens conteneurs..."
          docker stop spring_app || true
          docker rm spring_app || true
          docker stop angular_app || true
          docker rm angular_app || true
          docker stop mysql_container || true
          docker rm mysql_container || true

          echo "📥 Récupération des nouvelles images..."
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/angular-app:latest
          docker pull mysql:8.0

          echo "🔧 Création d'un réseau Docker..."
          docker network create my_network || true

          echo "📦 Lancement du conteneur MySQL..."
          docker run -d \
            --name mysql_container \
            --network my_network \
            -e MYSQL_ROOT_PASSWORD=root \
            -e MYSQL_DATABASE=spring_db \
            -e MYSQL_USER=user \
            -e MYSQL_PASSWORD=password \
            -p 3307:3306 \
            mysql:8.0

          echo "📦 Lancement du conteneur Spring Boot..."
          docker run -d \
            --name spring_app \
            --network my_network \
            -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql_container:3306/spring_db?useSSL=false&serverTimezone=UTC \
            -e SPRING_DATASOURCE_USERNAME=user \
            -e SPRING_DATASOURCE_PASSWORD=password \
            -p 8080:8080 \
            ${{ secrets.DOCKER_HUB_USERNAME }}/spring-app:latest

          echo "📦 Lancement du conteneur Angular..."
          docker run -d \
            --name angular_app \
            --network my_network \
            -p 4200:4200 \
            ${{ secrets.DOCKER_HUB_USERNAME }}/angular-app:latest

          echo "✅ Déploiement terminé !"
